x-veld:
  chain:
    about:
      description: "example veld for testing and showcasing"
      topics: "data persistence"

# We can define any number of services, reuse any kinds of executables. In this example we start up
# a database defined in one executable veld, and use another veld to upload some data into it
services:

  # The database executable veld
  veld_db:
    extends:
      file: ./veld_executable_ex4_basex/veld.yaml
      service: veld
    # A database needs a storage. We can also persist it into a data veld, to tie code and data
    # together and to version them
    volumes:
      - ./veld_data_ex3_basex/db_data/:/veld/storage/
    # A network is necessary for other services to connect to this database
    networks:
      - basex_network 

  # The loader executable veld, depending on the availability of the database
  veld_load:
    extends:
      file: ./veld_executable_ex5_load_to_basex/veld.yaml
      service: veld
    volumes:
      - ./veld_data_ex2_xml/data.xml:/veld/input/data.xml
    environment:
      user: "admin"
      password: "admin"
      host: "veld_db:8984"
      database_name: "veld_dummy_database"
    networks:
      - basex_network 
    # This `depends_on` tells the client to connect to the database only when it is ready
    depends_on:
      veld_db:
        condition: service_healthy

# A docker network, enabling communication between server and client
networks:
  basex_network:

